
package com.innerspec.main;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import java.net.URL;

/**
 * Displays a file select screen with which the user can select the dxf file
 * to convert.
 * Contains the main method in which the program starts
 *
 * @author Zachary Geier - zdgeier@gmail.com - Innerspec Technologies Inc.
 */
public class PrimaryFileSelectorFrame extends javax.swing.JFrame {
    
    private static String version = "";
    
    private static DataFrame dataFrame;
    private static ProgressFrame progressFrame;
    private static JFrame dialogueFrame;
    
    private static String dxfPath;
    
    
    
    
    /**
     * Creates new form PrimaryFileFrame
     */
    public PrimaryFileSelectorFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Select DXF File");

        URL iconURL = getClass().getResource("/com/innerspec/resources/InnerspecLogo.png");
        // iconURL is null when not found
        ImageIcon icon = new ImageIcon(iconURL);

        this.setIconImage(icon.getImage());
        jFileChooser.setDialogTitle("");
        jFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooserActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jFileChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jFileChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    /** 
     * Listens for user to select and open the file. This method disposes of
     *  the file chooser, populate the "layers" array and starts the DataFrame
     *  window.
     *  
     * @param evt       User presses the "OPEN" button
     */
    private void jFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooserActionPerformed
       
        //Checks if user hits close (does not select any file)
        if(jFileChooser.getSelectedFile() == null) System.exit(0);
        
        dxfPath = jFileChooser.getSelectedFile().toString();
                
        //Checks whether or not the user has chosen a .dxf file 
        if(dxfPath.substring(dxfPath.lastIndexOf("."), dxfPath.length()).equals(".dxf")){
            
            dispose();
            //Parses .dxf file for layer names
            LayerManager.populateLayersArray();  
            
            //Checks if layers have been found
            if(LayerManager.getLayers().isEmpty()){
                JOptionPane.showMessageDialog(dialogueFrame,
                    "No layers found in file.",
                    "No Valid Layers",
                    JOptionPane.ERROR_MESSAGE);
                
            }
            else {
                //Create both frames (progressFrame is initally set to invisible)
                dataFrame = new DataFrame();
                dataFrame.main(null);

                progressFrame = new ProgressFrame();                
                progressFrame.main(null);
            }
        }
        else{
            //Displays an error dialogue
            JOptionPane.showMessageDialog(dialogueFrame,
                "Please select a .dxf file.",
                "Incorrect File Format",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jFileChooserActionPerformed

    
    /**
     * The main method of the DXF to GBR program.
     * Creates and displays the primary file selector frame.
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        //Sets up window in OS theme
        try {
            javax.swing.UIManager.setLookAndFeel(
                javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrimaryFileSelectorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrimaryFileSelectorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrimaryFileSelectorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrimaryFileSelectorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        SplashScreenManager.splashInit();
        dialogueFrame = new JFrame();
         
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PrimaryFileSelectorFrame().setVisible(true);
            }
        });
    }
    
    /** Returns the file path of the selected dxf file.
     * 
     * @return dxfPath
     */
    public static String getDxfLocation(){
        return dxfPath;
    }
    
    public static DataFrame getDataFrame(){
        return dataFrame;
    }
    
    public static ProgressFrame getProgressFrame(){
        return progressFrame;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser;
    // End of variables declaration//GEN-END:variables
}
